class B21283374 {
  void f(
      boolean flagA,
      boolean flagB,
      boolean flagC,
      boolean flagD,
      boolean flagE,
      boolean flagF,
      boolean flagG,
      boolean flagH,
      boolean flagI,
      boolean flagJ,
      boolean flagK) {}

  {
    f(
        /* flagA= */ Boolean.TRUE,
        /* flagB= */ Boolean.FALSE,
        /* flagC= */ Boolean.FALSE,
        /* flagD= */ Boolean.FALSE,
        /* flagE= */ Boolean.FALSE,
        /* flagF= */ Boolean.FALSE,
        /* flagG= */ Boolean.FALSE,
        /* flagH= */ Boolean.FALSE,
        /* flagI= */ Boolean.FALSE,
        /* flagJ= */ Boolean.FALSE,
        /* flagK= */ Boolean.FALSE);

    f(
        /* flagA= */ Boolean.TRUE,
        /* flagB= */ Boolean.FALSE,
        /* flagC= */ Boolean.FALSE,
        /* flagD= */ Boolean.FALSE,
        /* flagE= */ Boolean.FALSE,
        /* flagF= */ Boolean.FALSE,
        /* flagG= */ Boolean.FALSE,
        /* flagH= */ Boolean.FALSE,
        /* flagI= */ Boolean.FALSE,
        /* flagJ= */ Boolean.FALSE,
        /* flagK= */ Boolean.FALSE);

    assertThat(foo.barAndBaz(/* paramName= */ false, thingy)).isEqualTo(new Something(""));
    assertThat(foo.barAndBaz(/* paramName= */ false, thingy)).isEqualTo(new Something(""));
    assertThat(foo.barAndBaz(/* paramName= */ false, thingy)).isEqualTo(new Something(""));

    f(/* paramName= */ false);

    assertThat__________________________________________________________(
        /* paramName= */ false, thingy);
    assertThat__________________________________________________________(
        /* paramName= */ false, thingy);

    f(
        arg1, /* which arg is this attached to? */
        arg2,
        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);

    f(
        /* paramName1 */ arg1,
        /* paramName2 */ arg2,
        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);

    f(
        arg1, /* paramName1 */
        arg2, /* paramName2 */
        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);
  }
}
